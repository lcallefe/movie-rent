<?xml version="1.0" encoding="UTF-8"?><testrun name="TestRunner" project="CucumberJava" tests="22" started="0" failures="0" errors="1" ignored="0">
  <testsuite name="runners.TestRunner" incomplete="true">
    <error>java.lang.IllegalStateException: The path to the driver executable must be set by the webdriver.chrome.driver system property; for more information, see https://github.com/SeleniumHQ/selenium/wiki/ChromeDriver. The latest version can be downloaded from http://chromedriver.storage.googleapis.com/index.html
	at com.google.common.base.Preconditions.checkState(Preconditions.java:199)
	at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:109)
	at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:32)
	at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:137)
	at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:296)
	at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:88)
	at org.openqa.selenium.chrome.ChromeDriver.&lt;init&gt;(ChromeDriver.java:116)
	at runners.TestRunner.reset(TestRunner.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.RunBefores.invokeMethod(RunBefores.java:33)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at cucumber.api.junit.Cucumber.run(Cucumber.java:100)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:93)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:529)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:756)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:452)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:210)

</error>
    <testsuite name="Feature:" incomplete="true">
      <testsuite name="Scenario: Sucessful movie rent" incomplete="true">
        <testcase name="Given a movie" classname="Scenario: Sucessful movie rent" incomplete="true"/>
        <testcase name="When I rent one of the movies" classname="Scenario: Sucessful movie rent" incomplete="true"/>
        <testcase name="Then the rent price will be R$3" classname="Scenario: Sucessful movie rent" incomplete="true"/>
        <testcase name="And the return date will be in the following day" classname="Scenario: Sucessful movie rent" incomplete="true"/>
        <testcase name="And the stock will have a balance of 1" classname="Scenario: Sucessful movie rent" incomplete="true"/>
      </testsuite>
      <testcase name="Scenario Outline: Movie rent when theres no stock" classname="Scenario Outline: Movie rent when theres no stock" incomplete="true"/>
      <testsuite name="Scenario Outline: Special conditions to extended warranty" incomplete="true">
        <testsuite name="Examples:" incomplete="true">
          <testsuite name="| 4 | extended | 8 | 3 | 2 |" incomplete="true">
            <testcase name="Given a movie stock with 2 units" classname="| 4 | extended | 8 | 3 | 2 |" incomplete="true"/>
            <testcase name="And the rent price is R$4" classname="| 4 | extended | 8 | 3 | 2 |" incomplete="true"/>
            <testcase name="And the rent type is extended" classname="| 4 | extended | 8 | 3 | 2 |" incomplete="true"/>
            <testcase name="When I rent one of the movies" classname="| 4 | extended | 8 | 3 | 2 |" incomplete="true"/>
            <testcase name="Then the rent price will be R$8" classname="| 4 | extended | 8 | 3 | 2 |" incomplete="true"/>
            <testcase name="And the return date will be in 3 days" classname="| 4 | extended | 8 | 3 | 2 |" incomplete="true"/>
            <testcase name="And the points earned will be equal to 2" classname="| 4 | extended | 8 | 3 | 2 |" incomplete="true"/>
            <testcase name="And the stock will have a balance of 1" classname="| 4 | extended | 8 | 3 | 2 |" incomplete="true"/>
          </testsuite>
          <testsuite name="| 4 | normal | 4 | 1 | 1 |" incomplete="true">
            <testcase name="Given a movie stock with 2 units" classname="| 4 | normal | 4 | 1 | 1 |" incomplete="true"/>
            <testcase name="And the rent price is R$4" classname="| 4 | normal | 4 | 1 | 1 |" incomplete="true"/>
            <testcase name="And the rent type is normal" classname="| 4 | normal | 4 | 1 | 1 |" incomplete="true"/>
            <testcase name="When I rent one of the movies" classname="| 4 | normal | 4 | 1 | 1 |" incomplete="true"/>
            <testcase name="Then the rent price will be R$4" classname="| 4 | normal | 4 | 1 | 1 |" incomplete="true"/>
            <testcase name="And the return date will be in 1 days" classname="| 4 | normal | 4 | 1 | 1 |" incomplete="true"/>
            <testcase name="And the points earned will be equal to 1" classname="| 4 | normal | 4 | 1 | 1 |" incomplete="true"/>
            <testcase name="And the stock will have a balance of 1" classname="| 4 | normal | 4 | 1 | 1 |" incomplete="true"/>
          </testsuite>
        </testsuite>
      </testsuite>
    </testsuite>
  </testsuite>
</testrun>
