<?xml version="1.0" encoding="UTF-8"?><testrun name="TestRunner" project="CucumberJava" tests="34" started="34" failures="4" errors="0" ignored="14">
  <testsuite name="runners.TestRunner" time="0.052">
    <testsuite name="Feature:" time="0.052">
      <testsuite name="Scenario: Sucessful movie rent" time="0.004">
        <testcase name="Given a movie stock with 2 units" classname="Scenario: Sucessful movie rent" time="0.0"/>
        <testcase name="And the rent price is R$3" classname="Scenario: Sucessful movie rent" time="0.0"/>
        <testcase name="When I rent one of the movies" classname="Scenario: Sucessful movie rent" time="0.0"/>
        <testcase name="Then the rent price will be R$3" classname="Scenario: Sucessful movie rent" time="0.0"/>
        <testcase name="And the return date will be in the following day" classname="Scenario: Sucessful movie rent" time="0.0"/>
        <testcase name="And the stock will have a balance of 1" classname="Scenario: Sucessful movie rent" time="0.0"/>
      </testsuite>
      <testsuite name="Scenario Outline: Movie rent when theres no stock" time="0.043">
        <testsuite name="Examples:" time="0.043">
          <testsuite name="| 0 | 0 |" time="0.002">
            <testcase name="Given a movie stock with 0 units" classname="| 0 | 0 |" time="0.0"/>
            <testcase name="When I rent one of the movies" classname="| 0 | 0 |" time="0.0"/>
            <testcase name="Then it will not be possible because theres no stock" classname="| 0 | 0 |" time="0.0"/>
            <testcase name="And the stock will have a balance of 0" classname="| 0 | 0 |" time="0.0"/>
          </testsuite>
          <testsuite name="| 2 | 1 |" time="0.038" incomplete="true">
            <failure>java.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:87)
	at org.junit.Assert.assertTrue(Assert.java:42)
	at org.junit.Assert.assertNotNull(Assert.java:713)
	at org.junit.Assert.assertNotNull(Assert.java:723)
	at steps.MovieRentSteps.it_will_not_be_possible_because_theres_no_stock(MovieRentSteps.java:76)
	at ✽.Then it will not be possible because theres no stock(./src/test/resources/Features/movie_rent.feature:17)

</failure>
            <testcase name="Given a movie stock with 2 units" classname="| 2 | 1 |" time="0.0"/>
            <testcase name="When I rent one of the movies" classname="| 2 | 1 |" time="0.0"/>
            <testcase name="Then it will not be possible because theres no stock" classname="| 2 | 1 |" time="0.031">
              <failure>java.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:87)
	at org.junit.Assert.assertTrue(Assert.java:42)
	at org.junit.Assert.assertNotNull(Assert.java:713)
	at org.junit.Assert.assertNotNull(Assert.java:723)
	at steps.MovieRentSteps.it_will_not_be_possible_because_theres_no_stock(MovieRentSteps.java:76)
	at ✽.Then it will not be possible because theres no stock(./src/test/resources/Features/movie_rent.feature:17)

</failure>
            </testcase>
            <testcase name="And the stock will have a balance of 1" classname="| 2 | 1 |" time="0.0" ignored="true"/>
          </testsuite>
          <testsuite name="| 3 | 2 |" time="0.0" incomplete="true">
            <failure>java.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:87)
	at org.junit.Assert.assertTrue(Assert.java:42)
	at org.junit.Assert.assertNotNull(Assert.java:713)
	at org.junit.Assert.assertNotNull(Assert.java:723)
	at steps.MovieRentSteps.it_will_not_be_possible_because_theres_no_stock(MovieRentSteps.java:76)
	at ✽.Then it will not be possible because theres no stock(./src/test/resources/Features/movie_rent.feature:17)

</failure>
            <testcase name="Given a movie stock with 3 units" classname="| 3 | 2 |" time="0.0"/>
            <testcase name="When I rent one of the movies" classname="| 3 | 2 |" time="0.0"/>
            <testcase name="Then it will not be possible because theres no stock" classname="| 3 | 2 |" time="0.0">
              <failure>java.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:87)
	at org.junit.Assert.assertTrue(Assert.java:42)
	at org.junit.Assert.assertNotNull(Assert.java:713)
	at org.junit.Assert.assertNotNull(Assert.java:723)
	at steps.MovieRentSteps.it_will_not_be_possible_because_theres_no_stock(MovieRentSteps.java:76)
	at ✽.Then it will not be possible because theres no stock(./src/test/resources/Features/movie_rent.feature:17)

</failure>
            </testcase>
            <testcase name="And the stock will have a balance of 2" classname="| 3 | 2 |" time="0.0" ignored="true"/>
          </testsuite>
        </testsuite>
      </testsuite>
      <testsuite name="Scenario Outline: Special conditions to extended warranty" time="0.001">
        <testsuite name="Examples:" time="0.001">
          <testsuite name="| 4 | extended | 8 | 3 | 2 |" time="0.0" incomplete="true">
            <skipped/>
            <testcase name="Given a movie stock with 2 units" classname="| 4 | extended | 8 | 3 | 2 |" time="0.0"/>
            <testcase name="And the rent price is R$4" classname="| 4 | extended | 8 | 3 | 2 |" time="0.0"/>
            <testcase name="And the rent type is extended" classname="| 4 | extended | 8 | 3 | 2 |" time="0.0" ignored="true"/>
            <testcase name="When I rent one of the movies" classname="| 4 | extended | 8 | 3 | 2 |" time="0.0" ignored="true"/>
            <testcase name="Then the rent price will be R$8" classname="| 4 | extended | 8 | 3 | 2 |" time="0.0" ignored="true"/>
            <testcase name="And the return date will be in 3 days" classname="| 4 | extended | 8 | 3 | 2 |" time="0.0" ignored="true"/>
            <testcase name="And the points earned will be equal to 2" classname="| 4 | extended | 8 | 3 | 2 |" time="0.0" ignored="true"/>
            <testcase name="And the stock will have a balance of 1" classname="| 4 | extended | 8 | 3 | 2 |" time="0.0" ignored="true"/>
          </testsuite>
          <testsuite name="| 4 | normal | 4 | 1 | 1 |" time="0.0" incomplete="true">
            <skipped/>
            <testcase name="Given a movie stock with 2 units" classname="| 4 | normal | 4 | 1 | 1 |" time="0.0"/>
            <testcase name="And the rent price is R$4" classname="| 4 | normal | 4 | 1 | 1 |" time="0.0"/>
            <testcase name="And the rent type is normal" classname="| 4 | normal | 4 | 1 | 1 |" time="0.0" ignored="true"/>
            <testcase name="When I rent one of the movies" classname="| 4 | normal | 4 | 1 | 1 |" time="0.0" ignored="true"/>
            <testcase name="Then the rent price will be R$4" classname="| 4 | normal | 4 | 1 | 1 |" time="0.0" ignored="true"/>
            <testcase name="And the return date will be in 1 days" classname="| 4 | normal | 4 | 1 | 1 |" time="0.0" ignored="true"/>
            <testcase name="And the points earned will be equal to 1" classname="| 4 | normal | 4 | 1 | 1 |" time="0.0" ignored="true"/>
            <testcase name="And the stock will have a balance of 1" classname="| 4 | normal | 4 | 1 | 1 |" time="0.0" ignored="true"/>
          </testsuite>
        </testsuite>
      </testsuite>
    </testsuite>
  </testsuite>
</testrun>
